AWSTemplateFormatVersion: '2010-09-09'
Description: Capture ECS Events and Ship them to Cloudwatch

Parameters:
  ECSClusterName:
    Type: "String"
    Default: "default"

Resources:
  #  A CloudWatch log group for persisting the Amazon ECS events
  TaskEventLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/cluster/events/${ECSClusterName}

  # Create the EventBridge rule that captures deployment events into the CloudWatch log group
  CaptureTaskEvents:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub 'Capture service deployment events from the Cluster ${ECSClusterName}'
      EventPattern:
        source:
          - aws.ecs
        detail-type:
          - "ECS Task State Change"
        detail:
          lastStatus:
            - "RUNNING"
          desiredStatus:
            - "RUNNING"
          clusterArn:
            - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSClusterName}
      # Where to send the events
      Targets:
        - Arn: !GetAtt TaskEventLog.Arn
          Id: 'CloudWatchLogGroup'

  # Create a log group resource policy that allows EventBridge to put logs into
  # the log group
  LogGroupForEventsPolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: ECSTaskEventsToCWLogsPolicy
      PolicyDocument: !Sub
      - >
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "EventBridgetoCWLogsPolicy",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                "${LogArn}"
              ]
            }
          ]
        }
      - { LogArn: !GetAtt TaskEventLog.Arn}